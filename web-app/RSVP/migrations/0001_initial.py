# Generated by Django 2.1.dev20180124004857 on 2018-02-11 19:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('choice_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100, verbose_name='Event Name')),
                ('event_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Event Time')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='time created')),
                ('plus_one_permissible', models.BooleanField(verbose_name='Is guest allowed to bring a plus one?')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='last updated time')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MultiChoicesResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated_time', models.DateTimeField(verbose_name='last updated time')),
                ('is_plus_one', models.BooleanField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RSVP.Choice')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('question_type', models.CharField(choices=[('S', 'Single select'), ('T', 'Text')], max_length=1)),
                ('isEditable', models.BooleanField(default=True)),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='last updated time')),
                ('isVisible', models.BooleanField(default=True, verbose_name='Are vendors allowed to view this question?')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RSVP.Event')),
            ],
        ),
        migrations.CreateModel(
            name='RegisterEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='time registered')),
                ('identity', models.CharField(choices=[('0', 'Owner'), ('1', 'Vendor'), ('2', 'Guest')], max_length=1, null=True)),
                ('register_state', models.CharField(choices=[('0', 'Pending'), ('1', 'Passed'), ('2', 'Declined and unread'), ('3', 'Declined and read')], max_length=1)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RSVP.Event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TextResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(max_length=500)),
                ('last_updated_time', models.DateTimeField(verbose_name='last updated time')),
                ('is_plus_one', models.BooleanField()),
                ('question', models.ForeignKey(limit_choices_to={'question_type': 'T'}, on_delete=django.db.models.deletion.CASCADE, to='RSVP.Question')),
                ('register_event', models.ForeignKey(limit_choices_to={'identity': '2'}, on_delete=django.db.models.deletion.CASCADE, to='RSVP.RegisterEvent')),
            ],
        ),
        migrations.AddField(
            model_name='multichoicesresponse',
            name='question',
            field=models.ForeignKey(limit_choices_to={'question_type': 'S'}, on_delete=django.db.models.deletion.CASCADE, to='RSVP.Question'),
        ),
        migrations.AddField(
            model_name='multichoicesresponse',
            name='register_event',
            field=models.ForeignKey(limit_choices_to={'identity': '2'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='RSVP.RegisterEvent'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(limit_choices_to={'question_type': 'S'}, on_delete=django.db.models.deletion.CASCADE, to='RSVP.Question'),
        ),
        migrations.AlterUniqueTogether(
            name='textresponse',
            unique_together={('question', 'register_event', 'is_plus_one')},
        ),
        migrations.AlterUniqueTogether(
            name='registerevent',
            unique_together={('event', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='multichoicesresponse',
            unique_together={('question', 'register_event', 'is_plus_one')},
        ),
    ]
